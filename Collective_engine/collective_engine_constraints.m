function [c,ceq] = collective_engine_constraints(X)
ceq = [];
options = optimoptions('fsolve','Display','off');

x0 = [1 0];
fun = @(n)steady_state(n,X);
sol = fsolve(fun,x0,options);
n1 = sol(1); 
n3 = sol(2);

F = X(:,1);
D = X(:,2);
b1 = X(:,3);
b2 = X(:,4);
eps = X(:,5);

etac = real(1-b2./b1);

de21 = (n3-n1).*eps - D;
de32 = (n3-n1).*eps + D;
de13 = -2.*(n3-n1).*eps;

% Reservoir 1 rates

w211 = exp(-b1.*(de21-F)/2);
w121 = exp(-b1.*(-de21+F)/2);

w321 = exp(-b1.*(de32-F)/2);
w231 = exp(-b1.*(-de32+F)/2);

w131 = exp(-b1.*(de13-F)/2);
w311 = exp(-b1.*(-de13+F)/2);

% Reservoir 2 rates

w212 = exp(-b2.*(de21+F)/2);
w122 = exp(-b2.*(-de21-F)/2);

w322 = exp(-b2.*(de32+F)/2);
w232 = exp(-b2.*(-de32-F)/2);

w132 = exp(-b2.*(de13+F)/2);
w312 = exp(-b2.*(-de13-F)/2);

% Jacobian (for stability analysis)

% Tr = (1/2).*((-2).*exp(1).^((1/2).*b1.*(D+F+eps.*n1+(-1).*eps.*n3)).*( ...
%   1+b1.*eps.*n1)+(-2).*exp(1).^((-1/2).*b1.*(F+2.*eps.*((-1).*n1+n3) ...
%   )).*(1+b1.*eps.*n1)+(-2).*exp(1).^((1/2).*b2.*(F+2.*eps.*(n1+(-1) ...
%   .*n3))).*(1+b2.*eps.*n1)+(-2).*exp(1).^((1/2).*b2.*(D+(-1).*F+ ...
%   eps.*n1+(-1).*eps.*n3)).*(1+b2.*eps.*n1)+(-2).*b2.*exp(1).^((-1/2) ...
%   .*b2.*(F+2.*eps.*(n1+(-1).*n3))).*eps.*n3+(-2).*b1.*exp(1).^((1/2) ...
%   .*b1.*(F+2.*eps.*((-1).*n1+n3))).*eps.*n3+2.*b1.*exp(1).^((-1/2).* ...
%   b1.*(D+F+eps.*n1+(-1).*eps.*n3)).*eps.*((-1)+n1+n3)+2.*b2.*exp(1) ...
%   .^((1/2).*b2.*((-1).*D+F+(-1).*eps.*n1+eps.*n3)).*eps.*((-1)+n1+ ...
%   n3)+exp(1).^((1/2).*b1.*(D+(-1).*F+(-1).*eps.*n1+eps.*n3)).*(2+ ...
%   b1.*eps.*n3)+exp(1).^((1/2).*b2.*(D+F+(-1).*eps.*n1+eps.*n3)).*(2+ ...
%   b2.*eps.*n3)+exp(1).^((1/2).*b1.*((-1).*D+F+eps.*n1+(-1).*eps.*n3) ...
%   ).*(2+(-1).*b1.*eps.*((-1)+n1+n3))+exp(1).^((-1/2).*b2.*(D+F+(-1) ...
%   .*eps.*n1+eps.*n3)).*(2+(-1).*b2.*eps.*((-1)+n1+n3)));
% 
% Det = (1/2).*((-1).*b1.*exp(1).^((1/2).*b1.*(D+3.*eps.*(n1+(-1).*n3))).* ...
%   eps.*n1+(-1).*b2.*exp(1).^((1/2).*b2.*(D+3.*eps.*(n1+(-1).*n3))).* ...
%   eps.*n1+((-2).*b1+b2).*exp(1).^((1/2).*(b2.*D+(-1).*b1.*F+(-1).* ...
%   b2.*F+(2.*b1+b2).*eps.*(n1+(-1).*n3))).*eps.*n1+(b1+(-2).*b2).* ...
%   exp(1).^((1/2).*(b1.*D+b1.*F+b2.*F+(b1+2.*b2).*eps.*(n1+(-1).*n3)) ...
%   ).*eps.*n1+exp(1).^((-1/2).*b1.*(D+3.*eps.*(n1+(-1).*n3))).*((-2)+ ...
%   b1.*eps.*((-1)+n1+(-3).*n3))+exp(1).^((-1/2).*b2.*(D+3.*eps.*(n1+( ...
%   -1).*n3))).*((-2)+b2.*eps.*((-1)+n1+(-3).*n3))+exp(1).^((-1).*b1.* ...
%   (F+eps.*(n1+(-1).*n3))).*((-2)+b1.*eps.*((-1)+n1+(-1).*n3))+exp(1) ...
%   .^(b2.*(F+eps.*((-1).*n1+n3))).*((-2)+b2.*eps.*((-1)+n1+(-1).*n3)) ...
%   +(-1).*exp(1).^(b1.*(F+eps.*(n1+(-1).*n3))).*(2+b1.*eps.*(1+n1+( ...
%   -1).*n3))+((-2).*b1+b2).*exp(1).^((1/2).*(b2.*D+b1.*F+b2.*F+(-1).* ...
%   (2.*b1+b2).*eps.*(n1+(-1).*n3))).*eps.*n3+(b1+(-2).*b2).*exp(1).^( ...
%   (1/2).*(b1.*D+(-1).*b1.*F+(-1).*b2.*F+(-1).*(b1+2.*b2).*eps.*(n1+( ...
%   -1).*n3))).*eps.*n3+(-1).*b1.*exp(1).^((1/2).*b1.*(D+3.*eps.*((-1) ...
%   .*n1+n3))).*eps.*n3+(-1).*b2.*exp(1).^((1/2).*b2.*(D+3.*eps.*((-1) ...
%   .*n1+n3))).*eps.*n3+4.*b1.*exp(1).^((-1).*b1.*D).*eps.*((-1)+n1+ ...
%   n3)+4.*b2.*exp(1).^((-1).*b2.*D).*eps.*((-1)+n1+n3)+2.*(b1+b2).* ...
%   exp(1).^((-1/2).*(b1+b2).*(D+F)+(-1/2).*(b1+(-1).*b2).*eps.*(n1+( ...
%   -1).*n3)).*eps.*((-1)+n1+n3)+2.*(b1+b2).*exp(1).^((1/2).*((-1).*( ...
%   b1+b2).*(D+(-1).*F)+(b1+(-1).*b2).*eps.*(n1+(-1).*n3))).*eps.*(( ...
%   -1)+n1+n3)+(-1).*exp(1).^((1/2).*((b1+b2).*(D+(-1).*F)+(-1).*(b1+( ...
%   -1).*b2).*eps.*(n1+(-1).*n3))).*(2+b2.*eps.*n1+b1.*eps.*n3)+(-1).* ...
%   exp(1).^((1/2).*(b1.*D+(-1).*b1.*F+b2.*F+(-1).*(b1+(-2).*b2).* ...
%   eps.*(n1+(-1).*n3))).*(2+2.*b2.*eps.*n1+b1.*eps.*n3)+(-1).*exp(1) ...
%   .^((1/2).*(b2.*D+b1.*F+(-1).*b2.*F+((-2).*b1+b2).*eps.*(n1+(-1).* ...
%   n3))).*(2+b2.*eps.*n1+2.*b1.*eps.*n3)+(-1).*exp(1).^((1/2).*((b1+ ...
%   b2).*(D+F)+(b1+(-1).*b2).*eps.*(n1+(-1).*n3))).*(2+b1.*eps.*n1+ ...
%   b2.*eps.*n3)+(-1).*exp(1).^((1/2).*(b2.*D+(-1).*b1.*F+b2.*F+(2.* ...
%   b1+(-1).*b2).*eps.*(n1+(-1).*n3))).*(2+2.*b1.*eps.*n1+b2.*eps.*n3) ...
%   +(-1).*exp(1).^((1/2).*(b1.*D+b1.*F+(-1).*b2.*F+(b1+(-2).*b2).* ...
%   eps.*(n1+(-1).*n3))).*(2+b1.*eps.*n1+2.*b2.*eps.*n3)+exp(1).^(( ...
%   -1/2).*b1.*(D+3.*eps.*((-1).*n1+n3))).*((-2)+b1.*eps.*((-1)+(-3).* ...
%   n1+n3))+exp(1).^((-1/2).*b2.*(D+3.*eps.*((-1).*n1+n3))).*((-2)+ ...
%   b2.*eps.*((-1)+(-3).*n1+n3))+exp(1).^((-1).*b2.*(F+eps.*((-1).*n1+ ...
%   n3))).*((-2)+b2.*eps.*((-1)+(-1).*n1+n3))+exp(1).^((1/2).*((-1).* ...
%   b1.*D+b1.*F+(-1).*b2.*F+(b1+(-2).*b2).*eps.*(n1+(-1).*n3))).*((-2) ...
%   +(-4).*b2.*eps.*n3+(-1).*b1.*eps.*((-1)+n1+n3))+exp(1).^((1/2).*(( ...
%   -1).*b1.*D+b1.*F+b2.*F+(b1+2.*b2).*eps.*(n1+(-1).*n3))).*((-2)+( ...
%   -4).*b2.*eps.*n1+b1.*eps.*((-1)+n1+n3))+exp(1).^((1/2).*((-1).*( ...
%   b1+(-1).*b2).*(D+(-1).*F)+(b1+b2).*eps.*(n1+(-1).*n3))).*((-2)+( ...
%   -2).*b2.*eps.*n1+b1.*eps.*((-1)+n1+n3))+(-1).*exp(1).^((1/2).*( ...
%   b2.*(F+2.*eps.*(n1+(-1).*n3))+(-1).*b1.*(D+F+eps.*n1+(-1).*eps.* ...
%   n3))).*(2+4.*b2.*eps.*n1+b1.*eps.*((-1)+n1+n3))+exp(1).^((-1/2).* ...
%   b2.*(F+2.*eps.*(n1+(-1).*n3))+(-1/2).*b1.*(D+F+eps.*n1+(-1).*eps.* ...
%   n3)).*((-2)+(-4).*b2.*eps.*n3+b1.*eps.*((-1)+n1+n3))+exp(1).^(( ...
%   -1/2).*(b1+(-1).*b2).*(D+F)+(-1/2).*(b1+b2).*eps.*(n1+(-1).*n3)).* ...
%   ((-2)+(-2).*b2.*eps.*n3+b1.*eps.*((-1)+n1+n3))+exp(1).^((1/2).*(( ...
%   -1).*b2.*D+(-1).*b1.*F+b2.*F+(2.*b1+(-1).*b2).*eps.*(n1+(-1).*n3)) ...
%   ).*((-2)+(-4).*b1.*eps.*n1+(-1).*b2.*eps.*((-1)+n1+n3))+exp(1).^(( ...
%   1/2).*((-1).*b2.*D+b1.*F+(-1).*b2.*F+((-2).*b1+b2).*eps.*(n1+(-1) ...
%   .*n3))).*((-2)+(-4).*b1.*eps.*n3+(-1).*b2.*eps.*((-1)+n1+n3))+exp( ...
%   1).^((1/2).*((-1).*b2.*D+(-1).*b1.*F+(-1).*b2.*F+(2.*b1+b2).*eps.* ...
%   (n1+(-1).*n3))).*((-2)+(-4).*b1.*eps.*n1+b2.*eps.*((-1)+n1+n3))+ ...
%   exp(1).^((1/2).*((b1+(-1).*b2).*(D+F)+(b1+b2).*eps.*(n1+(-1).*n3)) ...
%   ).*((-2).*(1+b1.*eps.*n1)+b2.*eps.*((-1)+n1+n3))+exp(1).^((1/2).*( ...
%   (-1).*b2.*D+b1.*F+b2.*F+(-1).*(2.*b1+b2).*eps.*(n1+(-1).*n3))).*(( ...
%   -2)+(-4).*b1.*eps.*n3+b2.*eps.*((-1)+n1+n3))+(-1).*exp(1).^(b1.*D) ...
%   .*(2+b1.*eps.*(n1+n3))+(-1).*exp(1).^(b2.*D).*(2+b2.*eps.*(n1+n3)) ...
%   +(-1).*exp(1).^((1/2).*b1.*(D+(-2).*F+eps.*(n1+(-1).*n3))).*(2+ ...
%   b1.*eps.*(2.*n1+n3))+(-1).*exp(1).^((1/2).*b2.*(D+2.*F+eps.*(n1+( ...
%   -1).*n3))).*(2+b2.*eps.*(2.*n1+n3))+exp(1).^((-1/2).*b1.*(D+2.*F+ ...
%   eps.*((-1).*n1+n3))).*((-2)+(-1).*b1.*eps.*((-1)+5.*n1+n3))+exp(1) ...
%   .^((-1/2).*b2.*(D+(-2).*F+eps.*((-1).*n1+n3))).*((-2)+(-1).*b2.* ...
%   eps.*((-1)+5.*n1+n3))+(-1).*exp(1).^((1/2).*b1.*(D+2.*F+eps.*((-1) ...
%   .*n1+n3))).*(2+b1.*eps.*(n1+2.*n3))+(-1).*exp(1).^((1/2).*b2.*(D+( ...
%   -2).*F+eps.*((-1).*n1+n3))).*(2+b2.*eps.*(n1+2.*n3))+exp(1).^(( ...
%   -1/2).*b1.*(D+(-2).*F+eps.*(n1+(-1).*n3))).*((-2)+(-1).*b1.*eps.*( ...
%   (-1)+n1+5.*n3))+exp(1).^((-1/2).*b2.*(D+2.*F+eps.*(n1+(-1).*n3))) ...
%   .*((-2)+(-1).*b2.*eps.*((-1)+n1+5.*n3))+exp(1).^((1/2).*((b1+(-1) ...
%   .*b2).*(D+(-1).*F)+(-1).*(b1+b2).*eps.*(n1+(-1).*n3))).*(b2.*eps.* ...
%   ((-1)+n1+n3)+(-2).*(1+b1.*eps.*n3)));

% Optimization objectives

work1 = F.*((w211-w311).*n1 + (w321-w121).*(1-n1-n3) + (w131-w231).*n3);
work2 = F.*((w312-w212).*n1 + (w122-w322).*(1-n1-n3) + (w232-w132).*n3);
heat1 = ((2.*eps.*n1 - 2.*eps.*n3 - F).*w131 + (eps.*n1 - eps.*n3 - D + F).*w231).*n3 + ((-2.*eps.*n1 + 2.*eps.*n3 + F).*w311 + (-eps.*n1+eps.*n3 - D - F).*w211).*n1 + ((eps.*n1-eps.*n3 + D + F).*w121 + (-eps.*n1 + eps.*n3 + D - F).*w321).*(1-n1-n3);
heat2 = ((2.*eps.*n1 - 2.*eps.*n3 + F).*w132 + (eps.*n1 - eps.*n3 - D - F).*w232).*n3 + ((-2.*eps.*n1 + 2.*eps.*n3 - F).*w312 + (-eps.*n1+eps.*n3 - D + F).*w212).*n1 + ((eps.*n1-eps.*n3 + D - F).*w122 + (-eps.*n1 + eps.*n3 + D + F).*w322).*(1-n1-n3);

P = real(work1+work2);
entropy = real(-b1.*heat1 - b2.*heat2);
eta = real(-P./heat2);

c = [
    -eta;
    eta-1;
    eta-etac;
    etac-1;
    P;
    b2-b1;
    -entropy;
    eps + F;
    eps + D;
    %-Det;
    %-Tr;
    ];
end